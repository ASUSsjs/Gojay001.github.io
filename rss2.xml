<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>大迷毛|成长录</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>学习 思考 沉淀</description>
    <pubDate>Sun, 19 Nov 2017 09:34:57 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Java Web路径问题解析</title>
      <link>http://yoursite.com/2017/11/19/Java-Web%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/</link>
      <guid>http://yoursite.com/2017/11/19/Java-Web%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/</guid>
      <pubDate>Sun, 19 Nov 2017 09:06:29 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;基本概念的理解&quot;&gt;&lt;a href=&quot;#基本概念的理解&quot; class=&quot;headerlink&quot; title=&quot;基本概念的理解&quot;&gt;&lt;/a&gt;基本概念的理解&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;绝对路径&lt;/strong&gt;：绝对路径就是你的主页上的文件或目录在硬盘上真正的路径，(URL和物理路径)，例如：&lt;code&gt;C:\xyz\test.txt&lt;/code&gt;；&lt;code&gt;http://www.test.com/index.html&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相对路径&lt;/strong&gt;：相对与某个基准目录的路径，例如：&lt;code&gt;&amp;quot;/&amp;quot;&lt;/code&gt;代表Web应用的&lt;code&gt;根目录&lt;/code&gt;，&lt;code&gt;&amp;quot;./&amp;quot;&lt;/code&gt;代表&lt;code&gt;当前目录&lt;/code&gt;,&lt;code&gt;&amp;quot;../&amp;quot;&lt;/code&gt;代表&lt;code&gt;上级目录&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;另外关于URI，URL,URN等内容，请参考RFC相关文档标准。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="基本概念的理解"><a href="#基本概念的理解" class="headerlink" title="基本概念的理解"></a>基本概念的理解</h1><ul><li><strong>绝对路径</strong>：绝对路径就是你的主页上的文件或目录在硬盘上真正的路径，(URL和物理路径)，例如：<code>C:\xyz\test.txt</code>；<code>http://www.test.com/index.html</code>；</li><li><strong>相对路径</strong>：相对与某个基准目录的路径，例如：<code>&quot;/&quot;</code>代表Web应用的<code>根目录</code>，<code>&quot;./&quot;</code>代表<code>当前目录</code>,<code>&quot;../&quot;</code>代表<code>上级目录</code>。</li></ul><blockquote><p>另外关于URI，URL,URN等内容，请参考RFC相关文档标准。</p></blockquote><a id="more"></a><h1 id="关于JSP-Servlet中的相对路径和绝对路径"><a href="#关于JSP-Servlet中的相对路径和绝对路径" class="headerlink" title="关于JSP/Servlet中的相对路径和绝对路径"></a>关于JSP/Servlet中的相对路径和绝对路径</h1><h2 id="服务器端的地址"><a href="#服务器端的地址" class="headerlink" title="服务器端的地址"></a>服务器端的地址</h2><blockquote><p>服务器端的相对地址指的是相对于你的web应用的地址，这个地址是在服务器端解析的（不同于<code>html</code>和<code>javascript</code>中的相对地址，他们是由客户端浏览器解析的）；<br>在jsp和servlet中的相对地址应该是相对于你的web应用，即相对于<code>http://192.168.0.1/webapp/</code>的。</p></blockquote><p>用到的地方：  </p><ul><li><strong>forward</strong>：servlet中的request.getRequestDispatcher(address);这个address是在服务器端解析的。<br><code>request.getRequestDispatcher(“/pages/a.jsp”)</code>的绝对路径地址：<br><code>http://192.168.0.1/webapp/pages/a.jsp</code>；</li><li><strong>sendRedirect</strong>：在jsp中<code>&lt;%response.sendRedirect(&quot;/user/a.jsp&quot;);%&gt;</code>。</li></ul><h2 id="客户端的地址"><a href="#客户端的地址" class="headerlink" title="客户端的地址"></a>客户端的地址</h2><blockquote><p>所有的html页面中的相对地址都是相对于服务器根目录<code>http://192.168.0.1/</code>的，而<code>不是</code>根目录下的该Web应用的目录：<code>http://192.168.0.1/webapp/</code>。</p></blockquote><ul><li>HTML中的<strong>form表单的action属性</strong>的地址应该是相对于服务器根目录<code>http://192.168.0.1/</code>；如果提交到a.jsp为：<code>action＝&quot;/webapp/user/a.jsp&quot;</code>或<code>action=&quot;&lt;%=request.getContextPath()%&gt;&quot;/user/a.jsp</code>；</li><li><strong>Javascript</strong>也是在客户端解析的，所以其相对路径和form表单一样。</li></ul><blockquote><p>因此，一般情况下，在<code>JSP/HTML</code>页面等引用的<code>CSS</code>、<code>Javascript</code>、<code>Action</code>等属性前面最好都加上<code>&lt;%=request.getContextPath()%&gt;</code>,以确保所引用的文件都属于Web应用中的目录。<br>另外，应该尽量避免使用类似<code>&quot;.&quot;</code>,<code>&quot;./&quot;</code>,<code>&quot;../&quot;</code>等类似的相对该文件位置的相对路径，这样当文件移动时，很容易出问题。</p></blockquote><h2 id="站点根目录和css路径问题"><a href="#站点根目录和css路径问题" class="headerlink" title="站点根目录和css路径问题"></a>站点根目录和css路径问题</h2><blockquote><p>当在<code>jsp中引入css</code>时，如果其相对路径相对于当前jsp文件的，而在一个和这个jsp的<code>路径不一样的servlet中forward</code>这个jsp时，就会发现这个css样式根本没有起作用。<br>这是因为在servlet中转发时<code>css的路径</code>就是相对于这个<code>servlet的相对路径</code>，而非jsp的路径了。<br>所以这时候不能在jsp中用这样的路径：<code>&lt;link href=&quot;one.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</code>或者<code>&lt;link href=&quot;../../one.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</code>。<br>这个时候要用站点根目录，就是相对于<code>http://192.168.0.1/</code>的目录，以<code>&quot;/&quot;</code>开头。<br>因此上述错误应更正为<code>href=”/test/one.css”</code> 类似的站点根目录的相对目录。</p></blockquote><h1 id="获得JSP-Servlet中当前应用的相对路径和绝对路径"><a href="#获得JSP-Servlet中当前应用的相对路径和绝对路径" class="headerlink" title="获得JSP/Servlet中当前应用的相对路径和绝对路径"></a>获得JSP/Servlet中当前应用的相对路径和绝对路径</h1><h2 id="JSP中获得当前应用的相对路径和绝对路径"><a href="#JSP中获得当前应用的相对路径和绝对路径" class="headerlink" title="JSP中获得当前应用的相对路径和绝对路径"></a>JSP中获得当前应用的相对路径和绝对路径</h2><ul><li><strong>根目录</strong>所对应的绝对路径:<code>request.getRequestURI()</code>;</li><li><strong>文件</strong>的绝对路径:<code>application.getRealPath(request.getRequestURI())</code>;</li><li><strong>当前web应用</strong>的绝对路径:<code>application.getRealPath(&quot;/&quot;)</code>;</li><li><strong>请求文件的上层目录</strong>:<code>new File(application.getRealPath(request.getRequestURI())).getParent()</code>;</li></ul><h2 id="Servlet中获得当前应用的相对路径和绝对路径"><a href="#Servlet中获得当前应用的相对路径和绝对路径" class="headerlink" title="Servlet中获得当前应用的相对路径和绝对路径"></a>Servlet中获得当前应用的相对路径和绝对路径</h2><ul><li><strong>根目录</strong>所对应的绝对路径:<code>request.getServletPath()</code>;</li><li><strong>文件</strong>的绝对路径:<br><code>request.getSession().getServletContext().getRealPath(request.getRequestURI())</code>;</li><li><strong>当前web应用</strong>的绝对路径:<code>servletConfig.getServletContext().getRealPath(&quot;/&quot;)</code>;<blockquote><p><strong>ServletContext对象</strong>获得几种方式：<br>javax.servlet.http.HttpSession.getServletContext();<br>javax.servlet.jsp.PageContext.getServletContext();<br>javax.servlet.ServletConfig.getServletContext(); </p></blockquote></li></ul><h1 id="JAVA的Class中获得相对路径，绝对路径"><a href="#JAVA的Class中获得相对路径，绝对路径" class="headerlink" title="JAVA的Class中获得相对路径，绝对路径"></a>JAVA的Class中获得相对路径，绝对路径</h1><h2 id="单独的Java类中获得绝对路径"><a href="#单独的Java类中获得绝对路径" class="headerlink" title="单独的Java类中获得绝对路径"></a>单独的Java类中获得绝对路径</h2><blockquote><p>根据<code>java.io.File</code>的Doc文挡，可知:<br> 默认情况下<code>new File(&quot;/&quot;)</code>代表的目录为：<code>System.getProperty(&quot;user.dir&quot;)</code>;<br>程序获得执行类的当前路径:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">import java.io.File;</div><div class="line">public class FileTest &#123;</div><div class="line">    public static void main(String[] args) throws Exception &#123;      </div><div class="line">        System.out.println(Thread.currentThread().getContextClassLoader().getResource(&quot;&quot;));    </div><div class="line">        System.out.println(FileTest.class.getClassLoader().getResource(&quot;&quot;));</div><div class="line">　      System.out.println(ClassLoader.getSystemResource(&quot;&quot;));        </div><div class="line">        System.out.println(FileTest.class.getResource(&quot;&quot;));        </div><div class="line">        System.out.println(FileTest.class.getResource(&quot;/&quot;));//Class文件所在路径  </div><div class="line">        System.out.println(new File(&quot;/&quot;).getAbsolutePath());   </div><div class="line">        System.out.println(System.getProperty(&quot;user.dir&quot;));    </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="服务器中的Java类获得当前路径"><a href="#服务器中的Java类获得当前路径" class="headerlink" title="服务器中的Java类获得当前路径"></a>服务器中的Java类获得当前路径</h2><h3 id="Weblogic"><a href="#Weblogic" class="headerlink" title="Weblogic"></a>Weblogic</h3><blockquote><p>WebApplication的系统文件根目录是你的weblogic安装所在根目录。<br>例如：如果你的weblogic安装在<code>c:\bea\weblogic700.....</code><br>那么，你的文件根路径就是<code>c:\</code><br>所以，有两种方式能够让你访问你的服务器端的文件:  </p><ol><li>使用<strong>绝对路径</strong>：<br>比如将你的参数文件放在c:\yourconfig\yourconf.properties，直接使用<code>new FileInputStream(&quot;yourconfig/yourconf.properties&quot;)</code>;  </li><li>使用<strong>相对路径</strong>：<br>相对路径的根目录就是你的<code>webapplication的根路径</code>，即WEB-INF的上一级目录，将你的参数文件放在<br><code>yourwebapp\yourconfig\yourconf.properties</code>，<br>这样使用：<code>new FileInputStream(&quot;./yourconfig/yourconf.properties&quot;)</code>;</li></ol></blockquote><h3 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h3><blockquote><p>在类中输出<code>System.getProperty(&quot;user.dir&quot;);</code>显示的是<code>%Tomcat_Home%/bin</code></p></blockquote><h3 id="如何读相对路径哪"><a href="#如何读相对路径哪" class="headerlink" title="如何读相对路径哪?"></a>如何读相对路径哪?</h3><blockquote><p>在Java文件中<code>getResource</code>或<code>getResourceAsStream</code>均可。<br>例：<code>getClass().getResourceAsStream(filePath)</code>;filePath可以是”/filename”,这里的/代表web发布根路径下<code>WEB-INF/classes</code>。</p></blockquote><p>参考文档：<a href="http://huttoncs.iteye.com/blog/2270670" target="_blank" rel="external">java路径问题</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017/11/19/Java-Web%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/#disqus_thread</comments>
    </item>
    
    <item>
      <title>web编码问题详解</title>
      <link>http://yoursite.com/2017/11/15/web%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/</link>
      <guid>http://yoursite.com/2017/11/15/web%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/</guid>
      <pubDate>Wed, 15 Nov 2017 04:06:11 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近搭建spring mvc项目时又再次遇到了编码问题，仔细想想，虽然以前用JSP+Servlet的时候解决了中文乱码的问题，但是都没有仔细分析过每个流程。于是今天在这里整理一下,web应用中常见的与编码相关配置：&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近搭建spring mvc项目时又再次遇到了编码问题，仔细想想，虽然以前用JSP+Servlet的时候解决了中文乱码的问题，但是都没有仔细分析过每个流程。于是今天在这里整理一下,web应用中常见的与编码相关配置：<br><a id="more"></a></p><h1 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h1><blockquote><p>首先配置好项目里的编码，这里主要有三个地方需要注意：</p></blockquote><h2 id="页面乱码"><a href="#页面乱码" class="headerlink" title="页面乱码"></a>页面乱码</h2><blockquote><p>页面乱码相对简单，只需要设置相关字符集编码即可。</p></blockquote><h3 id="JSP页面"><a href="#JSP页面" class="headerlink" title="JSP页面"></a>JSP页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;%@ page pageEncoding=&quot;UTF-8&quot; contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</div></pre></td></tr></table></figure><blockquote><p>pageEncoding：该页面编码格式；<br>charset：页面解码格式。</p></blockquote><h3 id="HTML页面"><a href="#HTML页面" class="headerlink" title="HTML页面"></a>HTML页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;meta http-equiv=Content-Type content=&quot;text/html;charset=utf-8&quot;&gt;</div></pre></td></tr></table></figure><h2 id="传值乱码"><a href="#传值乱码" class="headerlink" title="传值乱码"></a>传值乱码</h2><blockquote><p>页面到controller传值乱码需要在web.xml配置字符编码过滤器。</p></blockquote><h3 id="直接应用spring中字符编码过滤器"><a href="#直接应用spring中字符编码过滤器" class="headerlink" title="直接应用spring中字符编码过滤器"></a>直接应用spring中字符编码过滤器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;!--字符编码--&gt;</div><div class="line">&lt;filter&gt;</div><div class="line">    &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;</div><div class="line">    &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</div><div class="line">    &lt;init-param&gt;</div><div class="line">        &lt;param-name&gt;encoding&lt;/param-name&gt;</div><div class="line">        &lt;param-value&gt;UTF-8&lt;/param-value&gt;</div><div class="line">    &lt;/init-param&gt;</div><div class="line">    &lt;init-param&gt;</div><div class="line">        &lt;param-name&gt;forceEncoding&lt;/param-name&gt;</div><div class="line">        &lt;param-value&gt;true&lt;/param-value&gt;</div><div class="line">    &lt;/init-param&gt;</div><div class="line">&lt;/filter&gt;</div><div class="line">&lt;filter-mapping&gt;</div><div class="line">    &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;</div><div class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class="line">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure><h4 id="字符编码拦截器作用："><a href="#字符编码拦截器作用：" class="headerlink" title="字符编码拦截器作用："></a>字符编码拦截器作用：</h4><blockquote><p>分析源码发现作用相当于servlet中：<br>request.setCharacterEncoding(“UTF-8”);<br>response.setCharacterEncoding(“UTF-8”);</p></blockquote><h4 id="spring自带过滤器主要针对POST请求，对GET请求无效："><a href="#spring自带过滤器主要针对POST请求，对GET请求无效：" class="headerlink" title="spring自带过滤器主要针对POST请求，对GET请求无效："></a>spring自带过滤器主要针对POST请求，对GET请求无效：</h4><blockquote><p>对于GET请求的参数乱码，解决方法是采用数据还原：<br>String userName= request.getParameter(“userName”);<br>userName=new String(userName.getBytes(“iso8859-1”),”UTF-8”);</p></blockquote><h4 id="lt-url-pattern-gt-中匹配说明："><a href="#lt-url-pattern-gt-中匹配说明：" class="headerlink" title="&lt;url-pattern&gt;中匹配说明："></a><code>&lt;url-pattern&gt;</code>中匹配说明：</h4><blockquote><p><code>/</code>：不会匹配到<code>/*.jsp</code>，但会匹配<code>/login</code>等路径类型的url；<br><code>/*</code>：会匹配<code>/login</code>、<code>*.jsp</code>、<code>*.html</code>等路径；</p></blockquote><h3 id="根据源码可自己编写字符编码过滤器"><a href="#根据源码可自己编写字符编码过滤器" class="headerlink" title="根据源码可自己编写字符编码过滤器"></a>根据源码可自己编写字符编码过滤器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public class CharacterEncodingFilter implements Filter &#123;</div><div class="line">    private String encoding = null;</div><div class="line">    private FilterConfig filterConfig = null;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void init(FilterConfig config) throws ServletException &#123;</div><div class="line">        this.filterConfig = config;</div><div class="line">        this.encoding = config.getInitParameter(&quot;encoding&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)</div><div class="line">            throws ServletException, IOException &#123;</div><div class="line">        if (encoding != null) &#123;</div><div class="line">            request.setCharacterEncoding(encoding);</div><div class="line">            response.setContentType(&quot;text/html;charset=&quot; + encoding);</div><div class="line">        &#125;</div><div class="line">        chain.doFilter(request, response);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="存入数据库乱码"><a href="#存入数据库乱码" class="headerlink" title="存入数据库乱码"></a>存入数据库乱码</h2><blockquote><p>需要在数据库配置文件设置参数。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">url=jdbc:mysql://gojay001.mysql.rds.aliyuncs.com:3306/trade?useUnicode=true&amp;characterEncoding=utf8</div></pre></td></tr></table></figure><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><blockquote><p>按照上述确认了项目内的字符编码后，在实际运行环境中可能还是会出现乱码的情况，比如发布到云服务器上。这时候就需要配置相关的环境，主要是数据库和tomcat的配置。</p></blockquote><h2 id="Tomcat配置"><a href="#Tomcat配置" class="headerlink" title="Tomcat配置"></a>Tomcat配置</h2><blockquote><p>在tomcat的conf/server.xml中配置Get请求默认编码：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;  </div><div class="line">      connectionTimeout=&quot;20000&quot;  </div><div class="line">      redirectPort=&quot;8443&quot;   </div><div class="line">      URIEncoding=&quot;UTF-8&quot;  </div><div class="line">      useBodyEncodingForURI=&quot;true&quot;  </div><div class="line">      /&gt;</div></pre></td></tr></table></figure><h2 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h2><blockquote><p>参考：<a href="http://www.linuxidc.com/Linux/2014-10/108610.htm" target="_blank" rel="external">CentOS安装MySQL中文乱码问题解决</a><br>1、原因：安装mysql之后默认的字符编码为latin1;<br>2、查看：<code>show variables like &#39;%char%&#39;</code>;<br>3、修改为下面内容后重启mysql：<code>vi /etc/my.cf</code>;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[mysqld]</div><div class="line">character_set_server=utf8</div><div class="line">lower_case_table_names=1</div><div class="line">datadir=/var/lib/mysql</div><div class="line">socket=/var/lib/mysql/mysql.sock</div><div class="line">user=mysql</div><div class="line">symbolic-links=0</div><div class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</div><div class="line"> </div><div class="line">[mysqld_safe]</div><div class="line">default-character-set = utf8</div><div class="line">log-error=/var/log/mysqld.log</div><div class="line">pid-file=/var/run/mysqld/mysqld.pid</div><div class="line"></div><div class="line">[client]</div><div class="line">default-character-set = utf8</div><div class="line"></div><div class="line">[mysql.server]</div><div class="line">default-character-set = utf8</div><div class="line"></div><div class="line">[mysql]</div><div class="line">default-character-set = utf8</div></pre></td></tr></table></figure></p></blockquote><h1 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h1><h3 id="HTML文件仍然显示乱码："><a href="#HTML文件仍然显示乱码：" class="headerlink" title="HTML文件仍然显示乱码："></a>HTML文件仍然显示乱码：</h3><p><strong>将编码格式保存为UTF-8包含BOM</strong></p><blockquote><p>这次总结编码也就是因为遇到这个问题，一直以为是项目配置或者服务器的问题，困扰了几天后才发现这个原因。至于为什么需要带BOM，网上的评论也很多，这里也确实解决了我出现的问题。</p></blockquote><h3 id="静态资源访问："><a href="#静态资源访问：" class="headerlink" title="静态资源访问："></a>静态资源访问：</h3><p>1、在web.xml中配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;!--解决静态资源访问--&gt;</div><div class="line">&lt;servlet-mapping&gt;</div><div class="line">    &lt;servlet-name&gt;default&lt;/servlet-name&gt;</div><div class="line">    &lt;url-pattern&gt;*.css&lt;/url-pattern&gt;</div><div class="line">&lt;/servlet-mapping&gt;</div><div class="line"></div><div class="line">&lt;servlet-mapping&gt;</div><div class="line">    &lt;servlet-name&gt;default&lt;/servlet-name&gt;</div><div class="line">    &lt;url-pattern&gt;*.gif&lt;/url-pattern&gt;</div><div class="line">&lt;/servlet-mapping&gt;</div><div class="line"></div><div class="line">&lt;servlet-mapping&gt;</div><div class="line">    &lt;servlet-name&gt;default&lt;/servlet-name&gt;</div><div class="line">    &lt;url-pattern&gt;*.png&lt;/url-pattern&gt;</div><div class="line">&lt;/servlet-mapping&gt;</div><div class="line"></div><div class="line">&lt;servlet-mapping&gt;</div><div class="line">    &lt;servlet-name&gt;default&lt;/servlet-name&gt;</div><div class="line">    &lt;url-pattern&gt;*.js&lt;/url-pattern&gt;</div><div class="line">&lt;/servlet-mapping&gt;</div><div class="line"></div><div class="line">&lt;servlet-mapping&gt;</div><div class="line">    &lt;servlet-name&gt;default&lt;/servlet-name&gt;</div><div class="line">    &lt;url-pattern&gt;*.html&lt;/url-pattern&gt;</div><div class="line">&lt;/servlet-mapping&gt;</div></pre></td></tr></table></figure></p><p>2、路径说明：<br><strong>/page/index.html</strong>:根目录下的page文件夹；<br><strong>../page/index.html</strong>:当前路径的上一级的page文件夹；<br><strong>page/index.html</strong>:当前路径的page文件夹。</p><blockquote><p>以上目前我所遇到并解决的问题，可能还有其他相关我不了解的配置，以后学习了也会继续补充上来。</p></blockquote>]]></content:encoded>
      
      <comments>http://yoursite.com/2017/11/15/web%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>阿里云搭建java Web环境</title>
      <link>http://yoursite.com/2017/11/06/%E9%98%BF%E9%87%8C%E4%BA%91%E6%90%AD%E5%BB%BAjava-Web%E7%8E%AF%E5%A2%83/</link>
      <guid>http://yoursite.com/2017/11/06/%E9%98%BF%E9%87%8C%E4%BA%91%E6%90%AD%E5%BB%BAjava-Web%E7%8E%AF%E5%A2%83/</guid>
      <pubDate>Mon, 06 Nov 2017 13:59:10 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;最近重新在阿里云上配置了服务器和数据库，今天正好整理一下配置过程并且结合以前在CentOS下搭建java Web的流程，写在这里，以免以后忘记了不知所措。下面进入主题：&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><hr><p>最近重新在阿里云上配置了服务器和数据库，今天正好整理一下配置过程并且结合以前在CentOS下搭建java Web的流程，写在这里，以免以后忘记了不知所措。下面进入主题：<br><a id="more"></a></p><h1 id="二、配置阿里云"><a href="#二、配置阿里云" class="headerlink" title="二、配置阿里云"></a>二、配置阿里云</h1><hr><p>阿里云有学生优惠9.9一个月的云服务器，可以直接购买配置，选择CentOS。我在活动期间购买时花了9.9买了.xin域名和域名解析1年，还送了阿里云一整套6个月：服务器、数据库、OSS等等。我目前只在云服务器下搭建java Web环境并发布项目，然后连接的云数据库。服务器和数据库的配置都比较简单，阿里云上也有官方文档可以查看，按着步骤一步步配置下来就行了。</p><h1 id="三、工具准备"><a href="#三、工具准备" class="headerlink" title="三、工具准备"></a>三、工具准备</h1><hr><p>我采用的是在Windows下开发，然后将项目发布在云服务器上。所以，首先需要在Windows下准备几个工具。</p><h2 id="1、SecureCRT"><a href="#1、SecureCRT" class="headerlink" title="1、SecureCRT"></a>1、SecureCRT</h2><p>SecureCRT用于连接云服务器，能够在Windows下直接操作服务器。</p><h3 id="安装SecureCRT："><a href="#安装SecureCRT：" class="headerlink" title="安装SecureCRT："></a>安装SecureCRT：</h3><blockquote><p>下载SecureCRT及注册机<br>安装<br>打开注册机生成key<br>输入注册信息</p></blockquote><p>因为安装SercureCRT比较简单，这里就不过多介绍，在这里附上一个详细的<a href="http://www.cnblogs.com/qingtingzhe/articles/5008902.html" target="_blank" rel="external">安装步骤</a>。</p><h3 id="连接："><a href="#连接：" class="headerlink" title="连接："></a>连接：</h3><blockquote><p>输入ip、username、password建立session；<br>设置session选项；<code>（输出日志文件文件可以保存命令）</code><br>其他一些<a href="http://blog.csdn.net/sfslife/article/details/50923954" target="_blank" rel="external">个性化配置</a>可以参考。</p></blockquote><h2 id="2、FileZilla-FTP-Client"><a href="#2、FileZilla-FTP-Client" class="headerlink" title="2、FileZilla FTP Client"></a>2、FileZilla FTP Client</h2><p>FileZilla用于从Windows上传文件到服务器。</p><h3 id="下载、安装FileZilla"><a href="#下载、安装FileZilla" class="headerlink" title="下载、安装FileZilla"></a>下载、安装FileZilla</h3><p>直接官网下载安装</p><h3 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h3><p>输入sftp://ip，username，password（端口若无修改可以不填）</p><h1 id="四、安装java-Web环境"><a href="#四、安装java-Web环境" class="headerlink" title="四、安装java Web环境"></a>四、安装java Web环境</h1><hr><h2 id="1、安装JDK并配置环境变量"><a href="#1、安装JDK并配置环境变量" class="headerlink" title="1、安装JDK并配置环境变量"></a>1、安装JDK并配置环境变量</h2><h3 id="查看当前系统是否安装过JDK："><a href="#查看当前系统是否安装过JDK：" class="headerlink" title="查看当前系统是否安装过JDK："></a>查看当前系统是否安装过JDK：</h3><p><code>rpm -qa|grep java</code>（某些系统默认安装了JDK1.7）</p><h3 id="如果有JDK，卸载："><a href="#如果有JDK，卸载：" class="headerlink" title="如果有JDK，卸载："></a>如果有JDK，卸载：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum -y remove java java-1.4.2-gcj-compat-1.4.2.0-4ojpp.155</div><div class="line">yum -y remove java-1.6.0-openjdk-1.6.0.0-1.7.b09.el5</div></pre></td></tr></table></figure><h3 id="上传并解压安装包："><a href="#上传并解压安装包：" class="headerlink" title="上传并解压安装包："></a>上传并解压安装包：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /usr/local</div><div class="line">mkdir jdk_home tomcat_home soft</div></pre></td></tr></table></figure><p>通过Filezilla上传tar.gz压缩包：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd soft</div><div class="line">tar -xvf jdk-8u144-linux-x64.tar.gz -C /usr/local/jdk_home</div></pre></td></tr></table></figure></p><h3 id="配置JDK环境变量："><a href="#配置JDK环境变量：" class="headerlink" title="配置JDK环境变量："></a>配置JDK环境变量：</h3><ul><li>打开文件：<code>vi /etc/profile</code>  </li><li><p>将下列内容追加到末尾：</p><blockquote><p>#set java environment<br>  JAVA_HOME=/usr/local/jdk_home/jdk1.8<br>  CLASSPATH=.:$JAVA_HOME/lib/tools.jar<br>  PATH=$JAVA_HOME/bin:$PATH<br>  export JAVA_HOME CLASSPATH PATH  </p></blockquote></li><li><p>使文件生效：<code>source /etc/profile</code></p></li></ul><h3 id="查看java版本："><a href="#查看java版本：" class="headerlink" title="查看java版本："></a>查看java版本：</h3><p><code>java-version</code></p><h2 id="2、安装MySQL并配置"><a href="#2、安装MySQL并配置" class="headerlink" title="2、安装MySQL并配置"></a>2、安装MySQL并配置</h2><h3 id="mysql的安装"><a href="#mysql的安装" class="headerlink" title="mysql的安装"></a>mysql的安装</h3><blockquote><p>yum install mysql<br>yum install mysql-devel<br>yum install mysql-server（会出错）</p></blockquote><p><strong>CentOS 7将MySQL从默认的程序列表中移除，用mariadb代替了。</strong></p><h3 id="官网下载安装mysql-server"><a href="#官网下载安装mysql-server" class="headerlink" title="官网下载安装mysql-server"></a>官网下载安装mysql-server</h3><blockquote><p>wget <a href="http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm" target="_blank" rel="external">http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</a><br>rpm -ivh mysql-community-release-el7-5.noarch.rpm<br>yum install mysql-community-server</p></blockquote><h3 id="安装成功后重启mysql服务"><a href="#安装成功后重启mysql服务" class="headerlink" title="安装成功后重启mysql服务"></a>安装成功后重启mysql服务</h3><p><code>service mysqld restart</code></p><h3 id="初次安装mysql，root账号没有密码"><a href="#初次安装mysql，root账号没有密码" class="headerlink" title="初次安装mysql，root账号没有密码"></a>初次安装mysql，root账号没有密码</h3><p><code>mysql -u root</code><br>设置密码：<code>set password for &#39;root&#39;@&#39;localhost&#39; =password(&#39;root&#39;);</code></p><h3 id="安装完后mariadb自动被替换了，将不再生效"><a href="#安装完后mariadb自动被替换了，将不再生效" class="headerlink" title="安装完后mariadb自动被替换了，将不再生效"></a>安装完后mariadb自动被替换了，将不再生效</h3><p><code>rpm -qa |grep mariadb</code></p><h3 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h3><ul><li><p>编码：<br>打开mysql配置文件：<code>vi /etc/my.cnf</code><br>在最后追加编码配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[mysql]  </div><div class="line">default-character-set =utf8</div></pre></td></tr></table></figure></li><li><p>远程连接设置：</p><blockquote><p>把在所有数据库的所有表的所有权限赋值给位于所有IP地址的root用户：<br><code>mysql&gt; grant all privileges on *.* to root@&#39;%&#39;identified by &#39;root&#39;;</code><br>如果是新用户而不是root，则要先新建用户:<br><code>mysql&gt; create user &#39;username&#39;@&#39;%&#39; identified by &#39;password&#39;;</code></p></blockquote></li></ul><h3 id="测试mysql启动停止"><a href="#测试mysql启动停止" class="headerlink" title="测试mysql启动停止"></a>测试mysql启动停止</h3><p><code>service mysqld start/stop</code></p><p><code>mysql的安装就到这里了，附上一个[详细说明](http://www.cnblogs.com/starof/p/4680083.html)。</code></p><h2 id="3、安装Tomcat并配置"><a href="#3、安装Tomcat并配置" class="headerlink" title="3、安装Tomcat并配置"></a>3、安装Tomcat并配置</h2><h3 id="解析Tomact"><a href="#解析Tomact" class="headerlink" title="解析Tomact"></a>解析Tomact</h3><blockquote><p>解压：tar -xvf apache-tomcat-9.0.0.M26.tar.gz -C /usr/local/tomcat_home；<br>重命名：mv apache-tomcat-9.0…. tomcat9</p></blockquote><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><blockquote><p><code>vi /etc/profile</code><br>在文件最后追加配置：<br> #tomcat evn<br> CATALINA_HOME=/usr/local/tomcat_home/tomcat9<br> export CATALINA_HOME</p></blockquote><h3 id="配置tomcat的catalina-sh文件"><a href="#配置tomcat的catalina-sh文件" class="headerlink" title="配置tomcat的catalina.sh文件"></a>配置tomcat的catalina.sh文件</h3><blockquote><p>cd $CATALINA_HOME/bin<br>vi catalina.sh<br>找到 # OS specific support，然后在这行下面添加以下配置：<br>CATALINA_HOME=/usr/local/tomcat_home/tomcat9<br>JAVA_HOME=/usr/local/jdk_home/jdk1.8</p></blockquote><h3 id="安装tomcat服务"><a href="#安装tomcat服务" class="headerlink" title="安装tomcat服务"></a>安装tomcat服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd $CATALINA_HOME/bin</div><div class="line">cp catalina.sh /etc/init.d/tomcat</div></pre></td></tr></table></figure><h3 id="测试tomcat的启动和停用"><a href="#测试tomcat的启动和停用" class="headerlink" title="测试tomcat的启动和停用"></a>测试tomcat的启动和停用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service tomcat start</div><div class="line">service tomcat stop</div></pre></td></tr></table></figure><h3 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a><a href="http://blog.csdn.net/u011846257/article/details/54707864" target="_blank" rel="external">防火墙配置</a></h3><p><code>到这里Tomcat环境就已经搭建完成了，附上[参考文档](http://www.jianshu.com/p/b71296e8b9a7)。</code></p><h1 id="五、更多配置"><a href="#五、更多配置" class="headerlink" title="五、更多配置"></a>五、更多配置</h1><hr><p>这里只是简单地在阿里云的云服务器上搭建了java Web环境，其他的一些配置就需要以后有需求或者遇到困难的时候解决。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017/11/06/%E9%98%BF%E9%87%8C%E4%BA%91%E6%90%AD%E5%BB%BAjava-Web%E7%8E%AF%E5%A2%83/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Markdown基本语法</title>
      <link>http://yoursite.com/2017/10/30/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
      <guid>http://yoursite.com/2017/10/30/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
      <pubDate>Mon, 30 Oct 2017 09:45:52 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;一、基本语法&quot;&gt;&lt;a href=&quot;#一、基本语法&quot; class=&quot;headerlink&quot; title=&quot;一、基本语法&quot;&gt;&lt;/a&gt;一、基本语法&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;在HTML区块标签间的Markdown格式语法将不会被处理。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; 特殊字符自动转换。&lt;/li&gt;
&lt;li&gt;段落由一个或多个连续的文本行组成，它的前后要有一个以上的空行。  （空行的定义是显示上看起来像是空的，便会被视为空行）&lt;/li&gt;
&lt;li&gt;两个以上的空格可实现 &lt;code&gt;&amp;lt;br\&amp;gt;&lt;/code&gt; 标签。
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="一、基本语法"><a href="#一、基本语法" class="headerlink" title="一、基本语法"></a>一、基本语法</h1><ol><li>在HTML区块标签间的Markdown格式语法将不会被处理。</li><li><code>&lt;</code> 和 <code>&amp;</code> 特殊字符自动转换。</li><li>段落由一个或多个连续的文本行组成，它的前后要有一个以上的空行。  （空行的定义是显示上看起来像是空的，便会被视为空行）</li><li>两个以上的空格可实现 <code>&lt;br\&gt;</code> 标签。  <a id="more"></a>  </li></ol><h1 id="二、区块元素"><a href="#二、区块元素" class="headerlink" title="二、区块元素"></a>二、区块元素</h1><h2 id="（一）标题设置"><a href="#（一）标题设置" class="headerlink" title="（一）标题设置"></a>（一）标题设置</h2><ol><li>效果：让字体变大，和word的标题意思一样。</li><li>在Markdown当中设置标题，有<strong>两种方式</strong>：<br>-在文字下方添加 <code>=</code> 和 <code>-</code> ，他们分别表示一级标题和二级标题。<br>-在文字开头加上 <code>#</code>，通过 <code>#</code> 数量表示几级标题。  （一共只有1-6级标题，1级标题字体最大） </li></ol><h2 id="（二）区块引用"><a href="#（二）区块引用" class="headerlink" title="（二）区块引用"></a>（二）区块引用</h2><ol><li>先断好行，然后在<strong>每行（或第一行）</strong>的最前面加上 <code>&gt;</code> 。</li><li>区块引用可以嵌套。</li></ol><h2 id="（三）列表"><a href="#（三）列表" class="headerlink" title="（三）列表"></a>（三）列表</h2><ol><li><strong>无序列表</strong>：<br>在文字开头添加(*,+,-)实现无序列表。（和文字之间添加空格）</li><li><strong>有序列表</strong>：<br>使用数字后面跟上句号。（和文字之间添加空格）  </li></ol><h2 id="（四）分割线"><a href="#（四）分割线" class="headerlink" title="（四）分割线"></a>（四）分割线</h2><ol><li>在空白行下方添加 <code>---</code> 横线。</li></ol><h1 id="三、区段元素"><a href="#三、区段元素" class="headerlink" title="三、区段元素"></a>三、区段元素</h1><h2 id="（一）链接"><a href="#（一）链接" class="headerlink" title="（一）链接"></a>（一）链接</h2><p>Markdown中有两种方式实现链接，分别为<strong>内联方式</strong>和<strong>引用方式</strong>。  </p><ol><li>内联方式：<br><code>This is an [example link](http://example.com/).</code>  </li><li>引用方式：<br><code>I get from [Google][1] than from [Yahoo][2] or [MSN][3].</code><br><code>[1]: http://google.com/        &quot;Google&quot;</code><br><code>[2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;</code><br><code>[3]: http://search.msn.com/    &quot;MSN Search&quot;</code>  </li></ol><h2 id="（二）强调"><a href="#（二）强调" class="headerlink" title="（二）强调"></a>（二）强调</h2><ol><li><em>斜体</em>：文字两端使用1个“*”或者“_”夹起来。</li><li><strong>粗体</strong>：文字两端使用2个“*”或者“_”夹起来。  </li></ol><h2 id="（三）代码"><a href="#（三）代码" class="headerlink" title="（三）代码"></a>（三）代码</h2><p>实现方式有两种：  </p><ol><li>简单文字出现一个代码框。使用<code>&lt;blockquote&gt;</code>。（<code>不是单引号而是左上角的ESC下面~中的</code>）  </li><li>大片文字需要实现代码框。使用Tab或四个空格。  </li></ol><h2 id="（四）图片"><a href="#（四）图片" class="headerlink" title="（四）图片"></a>（四）图片</h2><ol><li>内联方式：<br><code>![alt text](/path/to/img.jpg &quot;Title&quot;)</code></li><li>引用方式：<br><code>![alt text][id]</code><br><code>[id]: /path/to/img.jpg &quot;Title&quot;</code></li></ol><h1 id="四、其它"><a href="#四、其它" class="headerlink" title="四、其它"></a>四、其它</h1><h2 id="（一）表格"><a href="#（一）表格" class="headerlink" title="（一）表格"></a>（一）表格</h2><ol><li>用|表示表格纵向边界，表头和表内容用-隔开。</li><li>—-:为右对齐  :—-为左对齐  :—:居中对齐  —–默认左对齐。  </li></ol><h2 id="（二）删除线"><a href="#（二）删除线" class="headerlink" title="（二）删除线"></a>（二）删除线</h2><ol><li>使用<code>~~</code>表示删除线。</li><li><code>注意</code>：~~和被删除的文字之间不能有空格。  </li></ol><h2 id="（三）脚注（之间必须空一行）"><a href="#（三）脚注（之间必须空一行）" class="headerlink" title="（三）脚注（之间必须空一行）"></a>（三）脚注（之间必须空一行）</h2><p><code>hello[^hello]</code><br><code>[^hello]: hi</code></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017/10/30/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://yoursite.com/2017/10/27/hello-world/</link>
      <guid>http://yoursite.com/2017/10/27/hello-world/</guid>
      <pubDate>Fri, 27 Oct 2017 15:29:23 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017/10/27/hello-world/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
